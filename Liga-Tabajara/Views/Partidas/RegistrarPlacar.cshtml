@model Partida

@using (Html.BeginForm("RegistrarPlacar", "Partidas", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div>
        <label>Gols Casa:</label>
        <input name="GolsCasa" type="number" min="0" value="@(Model.GolsCasa ?? 0)" />
        <label>Gols Visitante:</label>
        <input name="GolsVisitante" type="number" min="0" value="@(Model.GolsVisitante ?? 0)" />
    </div>

    <h4>Gols – @Model.TimeCasa.Nome</h4>
    <div id="gols-casa-container"></div>
    <button type="button" onclick="adicionarGol('casa')">Adicionar Gol</button>

    <h4>Gols – @Model.TimeVisitante.Nome</h4>
    <div id="gols-visitante-container"></div>
    <button type="button" onclick="adicionarGol('visitante')">Adicionar Gol</button>

    <br />
    <br />
    <button type="submit">Salvar Placar</button>
}

@section Scripts {
    <script>
    let contadorCasa = 0;
    let contadorVisitante = 0;

    function adicionarGol(tipo) {
        const container = document.getElementById(`gols-${tipo}-container`);
        const index = tipo === 'casa' ? ++contadorCasa : ++contadorVisitante;

        const div = document.createElement("div");
        div.innerHTML = `
            <select name="${tipo === 'casa' ? 'Casa_Jogador_' : 'Visitante_Jogador_'}${index}" required>
                <option value="">--Selecione jogador--</option>
                ${
                    (tipo === 'casa' ? @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.JogadoresCasa)) :
                                        @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.JogadoresVisitante)))
                    .map(j => `<option value="${j.Value}">${j.Text}</option>`).join('')
                }
            </select>
            <input name="${tipo === 'casa' ? 'Casa_Minuto_' : 'Visitante_Minuto_'}${index}" type="number" min="1" max="120" placeholder="Minuto" required />
        `;
        container.appendChild(div);
    }
    </script>
}
